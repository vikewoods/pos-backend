name: Deploy to Linode

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          # Navigate to project directory
          cd ${{ secrets.PROJECT_PATH }}
          
          # Pull latest changes
          git pull origin main
          
          # Stop existing containers
          docker-compose -f docker-compose.prod.yml down
          
          # Remove old images to save space (optional)
          docker image prune -f
          
          # Build and start new containers
          docker-compose -f docker-compose.prod.yml up -d --build
          
          # Clean up unused images and containers
          docker system prune -f
          
          # Show running containers for verification
          docker-compose -f docker-compose.prod.yml ps
        EOF

    - name: Health check
      run: |
        sleep 30
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          # Basic health check - adjust URL based on your health endpoint
          curl -f http://localhost:8247/health || echo "Health check failed, but deployment completed"
        EOF

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
        fi
